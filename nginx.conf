worker_processes 1;

user nobody nogroup;
# 'user nobody nobody;' for systems with 'nobody' as a group instead
error_log  /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
  worker_connections 1024; # increase if you have lots of clients
  accept_mutex off; # set to 'on' if nginx worker_processes > 1
  # 'use epoll;' to enable for Linux 2.6+
  # 'use kqueue;' to enable for FreeBSD, OSX
}

http {
    #Fix 502 Bad Gateway (.11 is Docker embedded resolver)
    resolver 127.0.0.11;
  include mime.types;
  # fallback in case we can't determine a type
  default_type application/octet-stream;
  access_log /var/log/nginx/access.log combined;
  sendfile on;

  #server {
  #  if no Host match, close the connection to prevent host spoofing
  #  listen 80 default_server;
  #  return 444;
  #}

  server {
    # use 'listen 80 deferred;' for Linux
    # use 'listen 80 accept_filter=httpready;' for FreeBSD
    listen 80;
    client_max_body_size 4G;

    # set the correct host(s) for your site
    server_name _;

    keepalive_timeout 5;

    root /usr/share/nginx/html;

    location / {
        # prevents nginx from crashing if hakaze is not up
        set $upstream hakaze;
        proxy_redirect off;
        proxy_pass http://$upstream/;
    }

    location ~ /thumb/(.*)$ {
        set $imgproxy imgproxy;
        proxy_redirect off;
        proxy_pass http://$imgproxy:8080/$1;
    }

    location /vault/ {
        default_type image/jpeg;
        try_files $uri =404;
    }
  }
}
